Trade Report Mark Scheme 

1 - define dates from command line variables

dates:"D"$.z.x[0 1]

1- logging solution 

-1 (string .z.p),": Connecting to HDB..."

1 - open port to HDB process

h:@[hopen;1657;{-2"Failed to connect to HDB: ",x;exit 1}]

1 - query the HDB for the correct columns (size,turnover,ntrades) via IPC
1 - unkeying the table 

trades:0!h({[DATES] select ntrades:count i, sum size,turnover:sum size*price by date,sym from trades where date within DATES};dates)

1 - loading in symstatic
1 - loading in columns as the correct type "S*S"

static:("S*S";enlist ",") 0: `:tradereport/symstatic.csv

1 - joining the trades ad static data with correct join and key on static table

trades:trades lj 1!static

1 - loading in fxrates
1 - loading in columns as correct type "DSF"

fxrates:("DSF";enlist ",") 0: `:tradereport/fxrates.csv

1 - correct join (aj) by curr and date between trades and fxrates

trades:aj[`curr`date;trades;update `g#curr from fxrates]

1 - update rateUSD to 1 where curr=USD

update rateUSD:1. from `trades where curr=`USD

1 - multiplying turnover and rateUSD columns and casting to long

tradereport:select date,sym,description,curr,ntrades,size,turnoverUSD:`long$turnover*rateUSD from trades

1 - save tradereport as a CSV file

save `:tradereport/tradereport.csv

bonus points 
-----------

2 - add email functionality 
  
filepath: 1_string name;
system "mail -s 'Trade Report' -A ",filepath," emma.goodwin@dataintellect.com < /dev/null"

2 - add date check, if none provided query across a hardcoded range

if[not `dates in key `.; 
 mindate:h"min raze flip select distinct date from trades";
 maxdate:h"max raze flip select distinct date from trades";
 dates:mindate,maxdate]

2 - save CSV with the queried date ranges

name:(`$":tradereport/tradereport_",(("_" sv string dates) except "."),".csv");name 0: "," 0:tradereportname 0: "," 0:tradereport
